# can provide us with different tools and syntax
version: '3.8'
# services are the containers
services:
  nginx:
    build:
      context: ./src/requirements/nginx
      dockerfile: Dockerfile-nginx
      args:
        BASE_VERSION: ${BASE_VERSION}
        CRT_PATH: ${CRT_PATH}
        KEY_PATH: ${KEY_PATH}
        SECURE_PORT: ${SECURE_PORT}
    image: nginx
    ports:
      - "${SECURE_PORT}:${SECURE_PORT}"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - CRT_PATH=${CRT_PATH}
      - KEY_PATH=${KEY_PATH}
      - INSECURE_PORT=${INSECURE_PORT}
      - SECURE_PORT=${SECURE_PORT}
      - WORDPRESS_PORT=${WORDPRESS_PORT}
    volumes:
      - .${CRT_PATH}:${CRT_PATH}
      - .${KEY_PATH}:${KEY_PATH}
      - ${WORDPRESS_VOLUME_PATH}:/var/www/html
      - ./nginx-logs:/var/log/nginx  
    networks:
      - inceptionnet
    restart: always
    depends_on:
      - wordpress
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


#WORDPRESS STUFF
  wordpress:
    build:
      context: ./src/requirements/wordpress
      dockerfile: wordpress-Dockerfile
      args:
        BASE_VERSION: ${BASE_VERSION}
        WORDPRESS_PORT: ${WORDPRESS_PORT}
    image: wordpress
    ports:
      - "${WORDPRESS_PORT}:${WORDPRESS_PORT}"
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      BOSS_PASS: ${BOSS_PASS}
      WORDPRESS_PORT: ${WORDPRESS_PORT}
    volumes:
      - ${WORDPRESS_VOLUME_PATH}:/var/www/html
    networks:
      - inceptionnet
    restart: always
    depends_on:
      - mariadb
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    build:
      context: ./src/requirements/wordpress
      dockerfile: mariadb-Dockerfile
      args:
        BASE_VERSION: ${BASE_VERSION}
        WORDPRESS_PORT: ${WORDPRESS_PORT}
    image: mariadb
    ports: "${MARIADB_PORT} : ${MARIADB_PORT}"
    environment: 
      MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE=${MYSQL_DATABASE}
      MYSQL_USER=${MYSQL_USER}
      MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
    # can use either one ?
      - ${DB_VOLUME_PATH}:/var/lib/mysql
    #  - db-data:/var/lib/mysql
    networks:
      - inceptionnet

    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
  #test contianer so i dont have to install curl seperatley
  test:
    image: curlimages/curl:latest
    volumes:
      - ./test.sh:/test.sh  # Mount the test script
    entrypoint: ["sh", "/test.sh"]
    depends_on:
      - nginx
    networks:
      - inceptionnet
# volumes are mounted into containers, allowing data to persist even if
# containers are recreated.
# Docker volumes are stored in a specific directory on the host filesystem managed by Docker::
# /var/lib/docker/volumes, but a path can be specified

volumes:
  wordpress-data:
  db-data:

# define diy networks , this allows containers to communicate with eachother brdiging creates
# private internal netwrok on the docker host
networks:
  inceptionnet:
    driver: bridge
